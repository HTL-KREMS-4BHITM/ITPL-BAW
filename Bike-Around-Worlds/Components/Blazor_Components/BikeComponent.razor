@using BAWLib
@using Domain.Interfaces
@using Domain.Repositories
@inject IRepository<Favorite> FavoriteRepository;
@inject IRepository<Motorbike> MotorbikeRepository;
@inject IRepository<User> UserRepository;
@inject NavigationManager NavigationManager

<div class="card bike-element" @onclick="NavToProductView">
    <img src=@ImgOne class="card-img-top" alt="Ein Bild eines Bikes">
    <div class="card-body">
        <h1>@ThisBike!.Manufacturer @ThisBike.Model </h1>
        <p class="card-text"><span class="price">@ThisBike.CurrentLeasingRate</span> /tag</p>
        <div class="d-flex justify-content-between m align-content-end justify-content-end">
            <p class="federal-state pb-0 mb-0">#@ThisBike.Federal_State</p>
            
            <i class="bi mb-0 pb-0 @Icon " style="font-size: 1.25rem;" @onclick="ChangeIcon"></i>
        </div>
    </div>
</div>

@code {
    [Parameter] public string? ImgOne { get; set; }
    [Parameter] public string? ImgTwo { get; set; }
    [Parameter] public string? ImgThree { get; set; }
    [Parameter] public string? Icon { get; set; }
    [Parameter] public Motorbike? ThisBike { get; set; }
    [Parameter] public bool IsFavorite { get; set; }
    public List<Favorite>? Favorites { get; set; }
    private Favorite? Favorite { get; set; }
    public List<User> Users { get; set; }

    public User CurrentUser { get; set; } = new User()
    {
        User_Id = 2,
        Username = "testUser",
        Age = 122,
        Password = "123456",
    };
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //Error Todo
        Favorites = FavoriteRepository.ReadAll();
        Users = UserRepository.ReadAll();

    }
    
    private void ChangeIcon()
    {
        Icon = Icon == "bi-star" ? "bi-star-fill" : "bi-star";

        if (ThisBike!.IsFavorite)
        {
            FavoriteRepository.Delete(ThisBike!.Motorbike_ID, CurrentUser.User_Id);
            ThisBike.IsFavorite = false;
            MotorbikeRepository.Update(ThisBike);
        }
        else
        {
            Favorite = new Favorite() { Motorbike = ThisBike!, User_ID = CurrentUser.User_Id}; // user_id hardcode
            FavoriteRepository.Create(Favorite);
            ThisBike!.IsFavorite = true;
            MotorbikeRepository.Update(ThisBike);
        }




    }

    private void NavToProductView()
    {
        NavigationManager.NavigateTo($"product/{ThisBike!.Motorbike_ID}");
    }

}