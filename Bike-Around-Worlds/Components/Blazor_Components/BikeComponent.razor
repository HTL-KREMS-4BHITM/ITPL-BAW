@using BAWLib
@using Domain.Interfaces
@inject IRepository<Favorite> FavoriteRepository;
@inject IRepository<User> UserRepository;

<div class="card bike-element ">
    <img src=@ImgOne class="card-img-top" alt="Ein Bild eines Bikes">
    <div class="card-body">
        <h1>@ThisBike!.Manufacturer @ThisBike.Model </h1>
        <p class="card-text"><span class="price">@ThisBike.CurrentLeasingRate</span> /tag</p>
        <div class="d-flex justify-content-between m align-content-end justify-content-end">
            <p class="federal-state pb-0 mb-0">#@ThisBike.Federal_State</p>
            
            <i class="bi mb-0 pb-0 @Icon " style="font-size: 1.25rem;" @onclick="ChangeIcon"></i>
        </div>
    </div>
</div>

@code {
    [Parameter] public string? ImgOne { get; set; }
    [Parameter] public string? ImgTwo { get; set; }
    [Parameter] public string? ImgThree { get; set; }
    private string? Icon { get; set; } = "bi-star";
    [Parameter] public Motorbike? ThisBike { get; set; }
    public List<Favorite>? Favorites { get; set; }
    private Favorite? Favorite { get; set; }
    public List<User> Users { get; set; }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //Error Todo
        //Favorites = FavoriteRepository.ReadAll();
        Users = UserRepository.ReadAll();

    }
    
    private void ChangeIcon()
    {
        Favorite = new()
        {
            Motorbike = ThisBike!,
            Motorbike_ID = ThisBike!.Motorbike_ID,
            User=Users.First(),
            User_ID = Users.First().User_Id
            //, 
            //User = ??,
            //User_ID = ??
            
            // Get the current user Todo
            //currently hard coded user and user id testing
        };
        Icon = Icon == "bi-star" ? "bi-star-fill" : "bi-star"; // when you first load the side the default icon is empty =>needs to be set in the other If Todo

        if (Favorite == null && Favorites == null)
            return; 
            
        if (Favorites!.Contains(Favorite!)!= true)
            FavoriteRepository.Create(Favorite!);
        else
            FavoriteRepository.Delete(Favorite!);
        
    }

}