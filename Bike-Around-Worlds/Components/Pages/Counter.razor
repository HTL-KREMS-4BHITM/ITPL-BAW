@page "/counter"
@using BAWLib
@using Bike_Around_Worlds.Components.Blazor_Components
@using Domain.Interfaces
@using Domain.Repositories
@rendermode InteractiveServer
@inject IRepository<Motorbike> BikeRepository;
@inject IJSRuntime js

<PageTitle>Bikes</PageTitle>

<h1>Bikes</h1>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-outline-danger" @onclick="DisplayGreeting">Display</button>
    </Authorized>
</AuthorizeView>

<div class="row "style="background-color: #2c2c2c">
    <div class="col-3">
        <FilterComponent></FilterComponent>
    </div>
    <div class="col-9">
        <div class="row g-5">
            

        @foreach (var bike in _bikes)
        {
            <div class="col-3">
            <!-- has to run trough another loop to get the img from a second list-->
            <BikeComponent CurrentLeasingRate="@bike.CurrentLeasingRate" Manufacturer="@bike.Manufacturer" Model="@bike.Model" Federal_State="@bike.Federal_State" ImgOne="/Resources/bike1.jpg"></BikeComponent>
            </div>
        }
        </div>
    </div>

</div>




@code {
    
    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }
    private List<Motorbike> _bikes = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _bikes = BikeRepository.ReadAll();
    }

    private async Task DisplayGreeting()
    {
        var authenticationState = await authState;
        var message = $"Hello {authenticationState.User.Identity.Name}";
        await js.InvokeVoidAsync("alert", message);
        
    }

}

