@page "/counter"
@using BAWLib
@using Bike_Around_Worlds.Components.Blazor_Components
@using Domain.Interfaces
@using Domain.Repositories
@rendermode InteractiveServer
@inject IRepository<Motorbike> BikeRepository;
@inject IJSRuntime js

<PageTitle>Bikes</PageTitle>

<h1>Bikes</h1>

<AuthorizeView>
    <Authorized>
        <button class="btn btn-outline-danger" @onclick="DisplayGreeting">Display</button>
    </Authorized>
</AuthorizeView>


<ul>
    @foreach(var bike in _bikes)
    {
        <!-- has to run trough another loop to get the img from a second list-->
        <!--<BikeComponent Id="bike.Motorbike_ID" Ps="bike.Ps" Weight="bike.Weight" Seatheight="bike.SeatHeight" Kilomerter="bike.Kilometer" Federal_State="@bike.Federal_State" Model="@bike.Model" Manufacturer="@bike.Manufacturer" CurrentLeasingRate="bike.CurrentLeasingRate" ImgOne="@bike.ImgOne" ImgTwo="@bike.ImgTwo" ImgThree="@bike.ImgThree"></BikeComponent>-->
        <BikeComponent Motorbike_ID="bike.Motorbike_ID" Ps="bike.Ps" Weight="bike.Weight" Seatheight="@bike.SeatHeight" Kilometer="@bike.Kilometer" Federal_State="@bike.Federal_State" Model="@bike.Model" Manufacturer="@bike.Manufacturer" CurrentLeasingRate="bike.CurrentLeasingRate" ImgOne="/Resources/bike1.jpg"></BikeComponent>
        <br/>
        <br/>
    }
</ul>
@code {
    
    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }
    private List<Motorbike> _bikes = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _bikes = BikeRepository.ReadAll();
    }

    private async Task DisplayGreeting()
    {
        var authenticationState = await authState;
        var message = $"Hello {authenticationState.User.Identity.Name}";
        await js.InvokeVoidAsync("alert", message);
        
    }

}

