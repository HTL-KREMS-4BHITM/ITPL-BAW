@page "/groupDetailsView/{Group_ID:int}"
@page "/groupDetailsView/{Group_ID:int}/{join}"

@inject IRepository<Groups> GroupRepository;
@inject IRepository<Waypoint> WaypointsRepository;
@inject IRepository<GroupMembers_JT> GroupMembersRepository;
@inject IRepository<User> UserRepository;
@inject IHttpContextAccessor HttpContextAccessor;
@using System.Security.Claims
@using BAWLib
@using BAWLib.Entities
@using Domain.Interfaces
@using Bike_Around_Worlds.Components.Blazor_Components

<section class="section-group-details">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 mb-5">
                <div class="row mt-lg-5">
                    <div class="col-9">
                        <div class="group_name">
                            <span>
                                <h3> @CurrentGroup!.Name</h3>
                                <h5># Ã–sterreich @CurrentGroup!.Federal_State</h5>
                            </span>
                        </div>
                    </div>
                    <div class="col-3 d-flex align-items-center">
                        <div class=" d-flex justify-content-end">
                            <span>
                                @if (showbtn)
                                {
                                    <a style="background-color: #ff4a00; color: white" class=" w-100 btn join_button" href="http://localhost:5215/groupDetailsView/@CurrentGroup.Group_Id/join">Beitreten</a>
                                }
                            </span>
                        </div>
                    </div>

                    <div class="col-lg-12 mb-3 mt-4">
                        <h4>Route:</h4>
                    </div>
                    <div class="col-lg-12 mb-3">
                        <div class="row d-flex justify-content-center align-items-center">
                            <div class="col-lg-6 map-holder mb-5 h-auto" style="height: auto">
                                <div style="min-height: 30rem; height: 100%"  id="my-map"></div>
                            </div>
                            <div class="col-lg-6 mb-3 route">
                                @for (int i = 0; i < _waypoints.Count; i++)
                                {
                                    string labeln = (i == 0) ? "Start" :
                                                    (i == _waypoints.Count - 1) ? "Ende" : "Punkt";
                                    
                                    <div>
                                        <input class="w-100" type="text" value="@_waypoints[i].Address" disabled>
                                        <label>@labeln</label>
                                    </div>
                                }
                                <div>
                                    <input class="w-100" type="text" value="@CurrentGroup.From_Date.ToString("dd/MM/yyyy") - @CurrentGroup.Start_Time.ToString(@"hh\:mm") - @CurrentGroup.To_Date.ToString("dd/MM/yyyy")" disabled>
                                    <label>Startdatum | Startuhrzeit | Enddatum</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 container description d-flex justify-content-center">
                <p class="d-flex justify-content-center">@CurrentGroup.Description</p>
            </div>
            <div class="col-lg-12 mb-5 members">
                <h5>Mitglieder:</h5>
                <div class="row">
                    @foreach (var member in Members)
                    {
                        <div class="col-lg-4 col-12">
                            <UserComponent User_ID="@member.User_ID"></UserComponent>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script>
        document.addEventListener("DOMContentLoaded", function () {
        if (!document.getElementById("my-map")) {
        console.warn("Map container not found!");
        return;
    }

        let map = L.map('my-map').setView([48.40921, 15.61415], 10);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        maxZoom: 19,
    }).addTo(map);
    });
</script>


@code {
    [Parameter] public int Group_ID { get; set; }
    [Parameter] public string join { get; set; }
    private Groups? CurrentGroup { get; set; } = new();
    private List<Waypoint> _waypoints = new();
    private List<GroupMembers_JT> Members = new();
    private bool showbtn = false;
    public string? UserName { get; set; }
    public List<User> CurrentUser { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        CurrentGroup = GroupRepository.Read(Group_ID);
        _waypoints = WaypointsRepository.Read(w => w.RouteID == CurrentGroup.Group_Id);
        Members = GroupMembersRepository.Read(gm => gm.Group_ID == CurrentGroup.Group_Id);

        var user = HttpContextAccessor.HttpContext?.User;
        UserName = user!.FindFirst(ClaimTypes.Name)?.Value;
        CurrentUser = UserRepository.Read(u => u.Username == UserName);

        if (Members.Contains(new GroupMembers_JT() { User_ID = CurrentUser[0].User_Id, Group_ID = CurrentGroup.Group_Id }))
        {
            showbtn = false;
        }
        else
        {
            showbtn = true;
        }

        if (!string.IsNullOrEmpty(join))
        {
            AddMember();
        }
    }

    private void AddMember()
    { 
        {
            var existingMember = GroupMembersRepository.Read(gm => gm.User_ID == CurrentUser[0].User_Id && gm.Group_ID == CurrentGroup.Group_Id).FirstOrDefault();
    
            if (existingMember == null) 
            {
                GroupMembers_JT mem = new GroupMembers_JT()
                {
                    Group_ID = CurrentGroup.Group_Id,
                    User_ID = CurrentUser[0].User_Id
                };

                GroupMembersRepository.Create(mem);
                Console.WriteLine("Added to members!");
                showbtn = false; 
                StateHasChanged();
            }
            else
            {
                Console.WriteLine("Member already exists in the group.");
            }
        }

    }
}
